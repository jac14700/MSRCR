log_im_Gaussian5<-log10(im_Gaussian5)
SSR5<-log_im -log_im_Gaussian5
# rm(log_im_Gaussian6)
}
{
im_Gaussian6[which(im_Gaussian6==0)]<-0.00001
log_im_Gaussian6<-log10(im_Gaussian6)
SSR6<-log_im -log_im_Gaussian6
# rm(im_Gaussian6)
}
retinex<-(SSR1+SSR2+SSR3+SSR4+SSR5+SSR6)/6
{
temp<-retinex
temp[,,,1]<-(retinex[,,,1]-min(retinex[,,,1])) / (max(retinex[,,,1])-min(retinex[,,,1]))
temp[,,,2]<-(retinex[,,,2]-min(retinex[,,,2])) / (max(retinex[,,,2])-min(retinex[,,,2]))
temp[,,,3]<-(retinex[,,,3]-min(retinex[,,,3])) / (max(retinex[,,,3])-min(retinex[,,,3]))
plot(temp)
}
log_im<-log10(im+0.005)
# plot(im_Gaussian3)
# plot(im)
# plot(im_Gaussian)
#
# im[,,,1]<-1
{
im_Gaussian1[which(im_Gaussian1==0)]<-0.00001
log_im<-log10(im+0.005)
log_im_Gaussian1<-log10(im_Gaussian1)
SSR1<-log_im -log_im_Gaussian1
# rm(im_Gaussian1)
}
{
im_Gaussian2[which(im_Gaussian2==0)]<-0.00001
log_im_Gaussian2<-log10(im_Gaussian2)
SSR2<-log_im -log_im_Gaussian2
# rm(im_Gaussian2)
}
{
im_Gaussian3[which(im_Gaussian3==0)]<-0.00001
log_im_Gaussian3<-log10(im_Gaussian3)
SSR3<-log_im -log_im_Gaussian3
# rm(im_Gaussian3)
}
{
im_Gaussian4[which(im_Gaussian4==0)]<-0.00001
log_im_Gaussian4<-log10(im_Gaussian4)
SSR4<-log_im -log_im_Gaussian4
# rm(im_Gaussian4)
}
{
im_Gaussian5[which(im_Gaussian5==0)]<-0.00001
log_im_Gaussian5<-log10(im_Gaussian5)
SSR5<-log_im -log_im_Gaussian5
# rm(log_im_Gaussian6)
}
{
im_Gaussian6[which(im_Gaussian6==0)]<-0.00001
log_im_Gaussian6<-log10(im_Gaussian6)
SSR6<-log_im -log_im_Gaussian6
# rm(im_Gaussian6)
}
# {
#   im_Gaussian7[which(im_Gaussian7==0)]<-0.000000000000000001
#   log_im_Gaussian7<-log10(im_Gaussian7)
#   SSR7<-log_im -log_im_Gaussian7
#   # rm(im_Gaussian6)
# }
retinex<-(SSR1+SSR2)/2
retinex<-(SSR1+SSR2+SSR3+SSR4+SSR5+SSR6)/6
{
temp<-retinex
temp[,,,1]<-(retinex[,,,1]-min(retinex[,,,1])) / (max(retinex[,,,1])-min(retinex[,,,1]))
temp[,,,2]<-(retinex[,,,2]-min(retinex[,,,2])) / (max(retinex[,,,2])-min(retinex[,,,2]))
temp[,,,3]<-(retinex[,,,3]-min(retinex[,,,3])) / (max(retinex[,,,3])-min(retinex[,,,3]))
plot(temp)
}
#color restore
{
img_sum<-(im[,,,1]+im[,,,2]+im[,,,3])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
}
log_im<-log10(im+0.009)
log_im_Gaussian1<-log10(im_Gaussian1)
SSR1<-log_im -log_im_Gaussian1
# rm(im_Gaussian1)
}
{
im_Gaussian2[which(im_Gaussian2==0)]<-0.00001
log_im_Gaussian2<-log10(im_Gaussian2)
SSR2<-log_im -log_im_Gaussian2
# rm(im_Gaussian2)
}
{
im_Gaussian3[which(im_Gaussian3==0)]<-0.00001
log_im_Gaussian3<-log10(im_Gaussian3)
SSR3<-log_im -log_im_Gaussian3
# rm(im_Gaussian3)
}
{
im_Gaussian4[which(im_Gaussian4==0)]<-0.00001
log_im_Gaussian4<-log10(im_Gaussian4)
SSR4<-log_im -log_im_Gaussian4
# rm(im_Gaussian4)
}
{
im_Gaussian6[which(im_Gaussian6==0)]<-0.00001
log_im_Gaussian6<-log10(im_Gaussian6)
SSR6<-log_im -log_im_Gaussian6
# rm(im_Gaussian6)
}
{
im_Gaussian5[which(im_Gaussian5==0)]<-0.00001
log_im_Gaussian5<-log10(im_Gaussian5)
SSR5<-log_im -log_im_Gaussian5
# rm(log_im_Gaussian6)
}
# {
#   im_Gaussian7[which(im_Gaussian7==0)]<-0.000000000000000001
#   log_im_Gaussian7<-log10(im_Gaussian7)
#   SSR7<-log_im -log_im_Gaussian7
#   # rm(im_Gaussian6)
# }
retinex<-(SSR1+SSR2)/2
retinex<-(SSR5+SSR4  )*.5
retinex<-(SSR1+SSR2+SSR3+SSR4+SSR5+SSR6)/6
{
temp<-retinex
temp[,,,1]<-(retinex[,,,1]-min(retinex[,,,1])) / (max(retinex[,,,1])-min(retinex[,,,1]))
temp[,,,2]<-(retinex[,,,2]-min(retinex[,,,2])) / (max(retinex[,,,2])-min(retinex[,,,2]))
temp[,,,3]<-(retinex[,,,3]-min(retinex[,,,3])) / (max(retinex[,,,3])-min(retinex[,,,3]))
plot(temp)
}
# plot(im_Gaussian3)
# plot(im)
# plot(im_Gaussian)
#
# im[,,,1]<-1
{
im_Gaussian1[which(im_Gaussian1==0)]<-0.00001
log_im<-log10(im+0.008)
log_im_Gaussian1<-log10(im_Gaussian1)
SSR1<-log_im -log_im_Gaussian1
# rm(im_Gaussian1)
}
{
im_Gaussian2[which(im_Gaussian2==0)]<-0.00001
log_im_Gaussian2<-log10(im_Gaussian2)
SSR2<-log_im -log_im_Gaussian2
# rm(im_Gaussian2)
}
{
im_Gaussian3[which(im_Gaussian3==0)]<-0.00001
log_im_Gaussian3<-log10(im_Gaussian3)
SSR3<-log_im -log_im_Gaussian3
# rm(im_Gaussian3)
}
{
im_Gaussian4[which(im_Gaussian4==0)]<-0.00001
log_im_Gaussian4<-log10(im_Gaussian4)
SSR4<-log_im -log_im_Gaussian4
# rm(im_Gaussian4)
}
{
im_Gaussian5[which(im_Gaussian5==0)]<-0.00001
log_im_Gaussian5<-log10(im_Gaussian5)
SSR5<-log_im -log_im_Gaussian5
# rm(log_im_Gaussian6)
}
{
im_Gaussian6[which(im_Gaussian6==0)]<-0.00001
log_im_Gaussian6<-log10(im_Gaussian6)
SSR6<-log_im -log_im_Gaussian6
# rm(im_Gaussian6)
}
# {
#   im_Gaussian7[which(im_Gaussian7==0)]<-0.000000000000000001
#   log_im_Gaussian7<-log10(im_Gaussian7)
#   SSR7<-log_im -log_im_Gaussian7
#   # rm(im_Gaussian6)
# }
retinex<-(SSR1+SSR2)/2
retinex<-(SSR1+SSR2+SSR3+SSR4+SSR5+SSR6)/6
{
temp<-retinex
temp[,,,1]<-(retinex[,,,1]-min(retinex[,,,1])) / (max(retinex[,,,1])-min(retinex[,,,1]))
temp[,,,2]<-(retinex[,,,2]-min(retinex[,,,2])) / (max(retinex[,,,2])-min(retinex[,,,2]))
temp[,,,3]<-(retinex[,,,3]-min(retinex[,,,3])) / (max(retinex[,,,3])-min(retinex[,,,3]))
plot(temp)
}
# plot(im_Gaussian3)
# plot(im)
# plot(im_Gaussian)
#
# im[,,,1]<-1
{
im_Gaussian1[which(im_Gaussian1==0)]<-0.00001
log_im<-log10(im+0.007)
log_im_Gaussian1<-log10(im_Gaussian1)
SSR1<-log_im -log_im_Gaussian1
# rm(im_Gaussian1)
}
{
im_Gaussian2[which(im_Gaussian2==0)]<-0.00001
log_im_Gaussian2<-log10(im_Gaussian2)
SSR2<-log_im -log_im_Gaussian2
# rm(im_Gaussian2)
}
{
im_Gaussian3[which(im_Gaussian3==0)]<-0.00001
log_im_Gaussian3<-log10(im_Gaussian3)
SSR3<-log_im -log_im_Gaussian3
# rm(im_Gaussian3)
}
{
im_Gaussian4[which(im_Gaussian4==0)]<-0.00001
log_im_Gaussian4<-log10(im_Gaussian4)
SSR4<-log_im -log_im_Gaussian4
# rm(im_Gaussian4)
}
{
im_Gaussian5[which(im_Gaussian5==0)]<-0.00001
log_im_Gaussian5<-log10(im_Gaussian5)
SSR5<-log_im -log_im_Gaussian5
# rm(log_im_Gaussian6)
}
{
im_Gaussian6[which(im_Gaussian6==0)]<-0.00001
log_im_Gaussian6<-log10(im_Gaussian6)
SSR6<-log_im -log_im_Gaussian6
# rm(im_Gaussian6)
}
retinex<-(SSR1+SSR2+SSR3+SSR4+SSR5+SSR6)/6
{
temp<-retinex
temp[,,,1]<-(retinex[,,,1]-min(retinex[,,,1])) / (max(retinex[,,,1])-min(retinex[,,,1]))
temp[,,,2]<-(retinex[,,,2]-min(retinex[,,,2])) / (max(retinex[,,,2])-min(retinex[,,,2]))
temp[,,,3]<-(retinex[,,,3]-min(retinex[,,,3])) / (max(retinex[,,,3])-min(retinex[,,,3]))
plot(temp)
}
beta<-46
alpha<-125
G<-5
b<-25/255
#color restore
{
img_sum<-(im[,,,1]+im[,,,2]+im[,,,3])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
}
log_im<-log10(im+0.01)
log_im_Gaussian1<-log10(im_Gaussian1)
SSR1<-log_im -log_im_Gaussian1
{
im_Gaussian2[which(im_Gaussian2==0)]<-0.00001
log_im_Gaussian2<-log10(im_Gaussian2)
SSR2<-log_im -log_im_Gaussian2
# rm(im_Gaussian2)
}
{
im_Gaussian3[which(im_Gaussian3==0)]<-0.00001
log_im_Gaussian3<-log10(im_Gaussian3)
SSR3<-log_im -log_im_Gaussian3
# rm(im_Gaussian3)
}
{
im_Gaussian4[which(im_Gaussian4==0)]<-0.00001
log_im_Gaussian4<-log10(im_Gaussian4)
SSR4<-log_im -log_im_Gaussian4
# rm(im_Gaussian4)
}
{
im_Gaussian5[which(im_Gaussian5==0)]<-0.00001
log_im_Gaussian5<-log10(im_Gaussian5)
SSR5<-log_im -log_im_Gaussian5
# rm(log_im_Gaussian6)
}
{
im_Gaussian6[which(im_Gaussian6==0)]<-0.00001
log_im_Gaussian6<-log10(im_Gaussian6)
SSR6<-log_im -log_im_Gaussian6
# rm(im_Gaussian6)
}
# {
#   im_Gaussian7[which(im_Gaussian7==0)]<-0.000000000000000001
#   log_im_Gaussian7<-log10(im_Gaussian7)
#   SSR7<-log_im -log_im_Gaussian7
#   # rm(im_Gaussian6)
# }
retinex<-(SSR1+SSR2)/2
retinex<-(SSR1+SSR2+SSR3+SSR4+SSR5+SSR6)/6
{
temp<-retinex
temp[,,,1]<-(retinex[,,,1]-min(retinex[,,,1])) / (max(retinex[,,,1])-min(retinex[,,,1]))
temp[,,,2]<-(retinex[,,,2]-min(retinex[,,,2])) / (max(retinex[,,,2])-min(retinex[,,,2]))
temp[,,,3]<-(retinex[,,,3]-min(retinex[,,,3])) / (max(retinex[,,,3])-min(retinex[,,,3]))
plot(temp)
}
#color restore
{
img_sum<-(im[,,,1]+im[,,,2]+im[,,,3])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
}
b<-25
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
G<-7
#color restore
{
img_sum<-(im[,,,1]+im[,,,2]+im[,,,3])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
}
G<-100
#color restore
{
img_sum<-(im[,,,1]+im[,,,2]+im[,,,3])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
}
beta<-100
alpha<-125
#color restore
{
img_sum<-(im[,,,1]+im[,,,2]+im[,,,3])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
}
# plot(im_Gaussian3)
# plot(im)
# plot(im_Gaussian)
#
# im[,,,1]<-1
{
{
im_Gaussian1[which(im_Gaussian1==0)]<-0.0000000001
log_im<-log10(im+0.01)
log_im_Gaussian1<-log10(im_Gaussian1)
SSR1<-log_im -log_im_Gaussian1
# rm(im_Gaussian1)
}
{
im_Gaussian2[which(im_Gaussian2==0)]<-0.0000000001
log_im_Gaussian2<-log10(im_Gaussian2)
SSR2<-log_im -log_im_Gaussian2
# rm(im_Gaussian2)
}
{
im_Gaussian3[which(im_Gaussian3==0)]<-0.0000000001
log_im_Gaussian3<-log10(im_Gaussian3)
SSR3<-log_im -log_im_Gaussian3
# rm(im_Gaussian3)
}
{
im_Gaussian4[which(im_Gaussian4==0)]<-0.0000000001
log_im_Gaussian4<-log10(im_Gaussian4)
SSR4<-log_im -log_im_Gaussian4
# rm(im_Gaussian4)
}
{
im_Gaussian5[which(im_Gaussian5==0)]<-0.0000000001
log_im_Gaussian5<-log10(im_Gaussian5)
SSR5<-log_im -log_im_Gaussian5
# rm(log_im_Gaussian6)
}
{
im_Gaussian6[which(im_Gaussian6==0)]<-0.0000000001
log_im_Gaussian6<-log10(im_Gaussian6)
SSR6<-log_im -log_im_Gaussian6
# rm(im_Gaussian6)
}
# {
#   im_Gaussian7[which(im_Gaussian7==0)]<-0.000000000000000001
#   log_im_Gaussian7<-log10(im_Gaussian7)
#   SSR7<-log_im -log_im_Gaussian7
#   # rm(im_Gaussian6)
# }
}
retinex<-(SSR1+SSR2+SSR3+SSR4+SSR5+SSR6)/6
{
temp<-retinex
temp[,,,1]<-(retinex[,,,1]-min(retinex[,,,1])) / (max(retinex[,,,1])-min(retinex[,,,1]))
temp[,,,2]<-(retinex[,,,2]-min(retinex[,,,2])) / (max(retinex[,,,2])-min(retinex[,,,2]))
temp[,,,3]<-(retinex[,,,3]-min(retinex[,,,3])) / (max(retinex[,,,3])-min(retinex[,,,3]))
plot(temp)
}
G<-5
beta<-46
alpha<-125
G<-5
b<-25
#color restore
{
img_sum<-(im[,,,1]+im[,,,2]+im[,,,3])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
channel_1<-log10(im[,,,1]*alpha)-log10(img_sum)
channel_2<-log10(im[,,,2]*alpha)-log10(img_sum)
channel_3<-log10(im[,,,3]*alpha)-log10(img_sum)
color_Restoration<-im
color_Restoration[,,,1]<-channel_1
color_Restoration[,,,2]<-channel_2
color_Restoration[,,,3]<-channel_3
color_Restoration<-beta*(color_Restoration)
img_msrcr<-G*(retinex*color_Restoration+b)
img_msrcr[,,,1]<-(img_msrcr[,,,1]-min(img_msrcr[,,,1])) / (max(img_msrcr[,,,1])-min(img_msrcr[,,,1]))
img_msrcr[,,,2]<-(img_msrcr[,,,2]-min(img_msrcr[,,,2])) / (max(img_msrcr[,,,2])-min(img_msrcr[,,,2]))
img_msrcr[,,,3]<-(img_msrcr[,,,3]-min(img_msrcr[,,,3])) / (max(img_msrcr[,,,3])-min(img_msrcr[,,,3]))
plot(img_msrcr)
}
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
log10(im*alpha)-log10(img_sum)
img_msrcr<-G*(retinex*color_Restoration+b)
alpha
im[,,,1]
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
plot(im[,,,2])
#img_sum[which(img_sum==0)]<-0.00000000000000001
#im[which(im==0)]<-0.00000000000000001
plot(im)[,,,2]
